
-- Requirement 1, 
-- Retrieve the details of all apartments in a specific building, sorted by apartment type.
SELECT A.ApartNum, A.ApartType, B.Name, B.Address
FROM Apartment AS A JOIN Building AS B
ON A.BuildingID = B.BuildingID
WHERE A.BuildingID = 1
ORDER BY A.ApartType;

-- 2
SELECT A.ApartNum, A.ApartType, BD.Name, BD.Address
FROM Apartment AS A
JOIN Booking BK ON A.ApartID = BK.ApartID
JOIN Building BD ON A.BuildingID = BD.BuildingID
WHERE NOT ('2024-11-21' BETWEEN BK.DateStart AND BK.DateEnd);


-- Requirement 3
-- List the buildings with the highest number of booked apartments.
SELECT B.BuildingID, B.Name AS BuildingName, B.Address AS BuildingAddress, COUNT(DISTINCT Bk.ApartID) AS BookedApartments
FROM Booking AS Bk
JOIN Apartment AS A ON Bk.ApartID = A.ApartID
JOIN Building AS B ON A.BuildingID = B.BuildingID
GROUP BY B.BuildingID, B.Name, B.Address
ORDER BY BookedApartments DESC;

-- Requirement 4 
-- Retrieve the total revenue generated by each building from bookings.
SELECT b.BuildingID, b.Name, SUM(DATEDIFF(bo.DateEnd , bo.DateStart) * 100) AS TotalRevenue
FROM Building b
JOIN Apartment a ON b.BuildingID = a.BuildingID
JOIN Booking bo ON a.ApartID = bo.ApartID 
GROUP BY b.BuildingID, b.Name; 

-- Requirement 5
-- Find guests who have made more than 2 bookings.
SELECT G.GuestID, G.FirstName, G.LastName, COUNT(Bk.BookID) AS BookingCount
FROM Guest AS G
JOIN Booking AS Bk ON G.GuestID = Bk.GuestID
GROUP BY G.GuestID, G.FirstName, G.LastName
HAVING COUNT(Bk.BookID) > 2;


-- 6
SELECT BK.BookID, A.ApartNum, A.ApartType, BD.Name, BD.Address
FROM Booking AS BK
JOIN Apartment AS A ON BK.ApartID = A.ApartID
JOIN Building AS BD ON A.BuildingID = BD.BuildingID
WHERE BK.DateStart < CURRENT_DATE() AND BK.DateEnd > CURRENT_DATE();

-- 7
SELECT 
    A.ApartNum, 
    CONCAT(G.FirstName, ' ', G.LastName) AS GuestName, 
    CASE 
        WHEN '2024-01-01' BETWEEN BK.DateStart AND BK.DateEnd THEN 'Booked'
        ELSE 'Available'
    END AS BookingStatus
FROM Apartment AS A
JOIN Booking AS BK ON A.ApartID = BK.ApartID
JOIN Guest AS G ON BK.GuestID = G.GuestID;   
